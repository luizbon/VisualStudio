<local:GenericRepositoryCreationControl x:Class="GitHub.VisualStudio.UI.Views.Controls.RepositoryCreationControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:ui="clr-namespace:GitHub.UI;assembly=GitHub.UI"
             xmlns:uirx="clr-namespace:GitHub.UI;assembly=GitHub.UI.Reactive"
             xmlns:local="clr-namespace:GitHub.VisualStudio.UI.Views.Controls"
             xmlns:helpers="clr-namespace:GitHub.Helpers;assembly=GitHub.UI"
             xmlns:sampleData="clr-namespace:GitHub.SampleData;assembly=GitHub.App"
             xmlns:GitHub="clr-namespace:GitHub.VisualStudio.Helpers"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:prop="clr-namespace:GitHub.VisualStudio"
             mc:Ignorable="d"
             d:DesignWidth="414"
             d:DesignHeight="440"
             Style="{DynamicResource DialogUserControl}">
    <d:DesignProperties.DataContext>
        <Binding>
            <Binding.Source>
                <sampleData:RepositoryCreationViewModelDesigner />
            </Binding.Source>
        </Binding>
    </d:DesignProperties.DataContext>

    <UserControl.Resources>
        <ResourceDictionary>
          <ResourceDictionary.MergedDictionaries>
            <GitHub:SharedDictionaryManager Source="pack://application:,,,/GitHub.UI;component/SharedDictionary.xaml" />
            <GitHub:SharedDictionaryManager Source="pack://application:,,,/GitHub.UI.Reactive;component/SharedDictionary.xaml" />
          </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <DockPanel Style="{DynamicResource DialogContainerDockPanel}">
        <ui:OcticonImage Icon="logo_github" Style="{DynamicResource GitHubLogo}" Margin="0,-20,0,-10" Panel.ZIndex="100" DockPanel.Dock="Top" />
        
        <ui:OcticonCircleButton
            DockPanel.Dock="Bottom"
            IsDefault="True"
            Margin="0"
            x:Name="createRepositoryButton"
            HorizontalAlignment="Center"
            Icon="check">
            <TextBlock Text="{x:Static prop:Resources.CreateLink}"/>
        </ui:OcticonCircleButton>

        <StackPanel>
            <StackPanel.Resources>
                <Style TargetType="{x:Type uirx:UserErrorMessages}" BasedOn="{StaticResource {x:Type uirx:UserErrorMessages}}">
                    <Setter Property="IconMargin" Value="-1,2,7,0" />
                    <Setter Property="ErrorMessageFontWeight" Value="Normal" />
                    <Setter Property="Icon" Value="stop" />
                    <Setter Property="Margin" Value="0,5,0,0"/>
                </Style>
                </StackPanel.Resources>
            <ui:HorizontalShadowDivider />
            <Grid
                FocusManager.IsFocusScope="True"
                x:Name="loginStackPanel"
                Margin="30,-10,30,10"
                FocusVisualStyle="{x:Null}">

                <Grid.Resources>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Margin" Value="0,3,0,3" />
                    </Style>

                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{StaticResource GHTextBrush}" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="HorizontalAlignment" Value="Right" />
                        <Setter Property="Margin" Value="0,0,10,0" />
                        <Setter Property="Padding" Value="0" />
                    </Style>

                    <Style TargetType="{x:Type ui:PromptTextBox}" BasedOn="{StaticResource RoundedPromptTextBox}">
                        <Setter Property="Margin" Value="0,5" />
                    </Style>

                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                    </Style>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="35" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="35" />
                    <RowDefinition Height="35" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Label Grid.Column="0" Grid.Row="0" Target="{Binding ElementName=nameText}" Content="{x:Static prop:Resources.nameText}"/>
                <ui:PromptTextBox x:Name="nameText" Grid.Column="1" Grid.Row="0" MaxLength="{x:Static GitHub:Constants.MaxRepositoryNameLength}"/>

                <StackPanel Grid.Column="1" Grid.Row="1">
                    <uirx:ValidationMessage
                        x:Name="nameValidationMessage"
                        ValidatesControl="{Binding ElementName=nameText}" />
                    <uirx:ValidationMessage
                        x:Name="safeRepositoryNameWarning"
                        ValidatesControl="{Binding ElementName=nameText}"
                        Style="{DynamicResource InlineValidationMessage}"
                        ErrorAdornerTemplate="None"
                        Icon="alert"
                        Fill="#f39c12" />
                </StackPanel>

                <Label Grid.Column="0" Grid.Row="2" Target="{Binding ElementName=description}" Content="{x:Static prop:Resources.descriptionText}"/>
                <ui:PromptTextBox x:Name="description" Grid.Column="1" Grid.Row="2"/>

                <Label Grid.Column="0" Grid.Row="3" Target="{Binding ElementName=localPathText}" Content="{x:Static prop:Resources.localPathText}"/>
                <Grid Grid.Column="1" Grid.Row="3">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <ui:PromptTextBox x:Name="localPathText" Grid.Column="0" Grid.Row="0" />
                    <Button
                        x:Name="browsePathButton"
                        Grid.Column="1"
                        VerticalContentAlignment="Center"
                        Grid.Row="0"
                        Padding="0"
                        Margin="3,0,0,0"
                        Style="{StaticResource GitHubBlueLinkButton}" Content="{x:Static prop:Resources.browsePathButtonContent}"/>
                </Grid>

                <uirx:ValidationMessage
                    x:Name="pathValidationMessage"
                    Grid.Column="1"
                    Grid.Row="4"
                    ValidatesControl="{Binding ElementName=localPathText}" />

                <Label Grid.Column="0" Grid.Row="5" Target="{Binding ElementName=ignoreTemplateList}" Content="{x:Static prop:Resources.ignoreTemplateListText}"/>
                <uirx:FilteredComboBox
                    x:Name="ignoreTemplateList"
                    Grid.Column="1"
                    Grid.Row="5"
                    Style="{StaticResource GitHubFilterComboBox}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock
                            x:Name="itemName"
                            Text="{Binding Name}"
                            FontWeight="{Binding Recommended, Converter={ui:BooleanToFontWeightConverter}}" />
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding  RelativeSource={RelativeSource Mode=FindAncestor,  AncestorType=ComboBoxItem}}" Value="{x:Null}">
                                    <Setter TargetName="itemName" Property="FontWeight" Value="Normal" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </uirx:FilteredComboBox>

                <Label Grid.Column="0" Grid.Row="6" Target="{Binding ElementName=licenseList}" Content="{x:Static prop:Resources.licenseListText}"/>
                <uirx:FilteredComboBox
                    x:Name="licenseList"
                    Grid.Column="1"
                    Grid.Row="6"
                    Style="{StaticResource GitHubFilterComboBox}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock
                            x:Name="itemName"
                            Text="{Binding Name}"
                            FontWeight="{Binding Recommended, Converter={ui:BooleanToFontWeightConverter}}" />
                            <DataTemplate.Triggers>
                                <DataTrigger
                                Binding="{Binding  RelativeSource={RelativeSource Mode=FindAncestor,  AncestorType=ComboBoxItem}}"
                                Value="{x:Null}">
                                    <Setter TargetName="itemName" Property="FontWeight" Value="Normal" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </uirx:FilteredComboBox>

                <ui:HorizontalShadowDivider Grid.Row="7" Grid.ColumnSpan="2" Margin="0,12" />

                <ui:GitHubComboBox
                    x:Name="accountsComboBox"
                    Grid.Column="1"
                    Grid.Row="8"
                    Margin="0,0,0,8"
                    ItemsSource="{Binding Accounts}"
                    Style="{StaticResource GitHubComboBox}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image
                                Source="{Binding Avatar}"
                                Width="16"
                                Height="16"
                                RenderOptions.BitmapScalingMode="HighQuality"
                                Margin="0,0,8,0" />
                                <TextBlock Text="{Binding Login}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ui:GitHubComboBox>

                <CheckBox 
                    x:Name="makePrivate"
                    Grid.Column="1"
                    Grid.Row="9"
                    Content="{x:Static prop:Resources.makePrivateContent}"
                    Style="{DynamicResource BlueRoundedCheckBox}"
                    Padding="8,0,0,0" />
            </Grid>

          <uirx:UserErrorMessages
                x:Name="userErrorMessages"
                HorizontalAlignment="Center"
                HorizontalContentAlignment="Stretch"
                Margin="0" />
        </StackPanel>
     
    </DockPanel>
</local:GenericRepositoryCreationControl>
